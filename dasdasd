[1mdiff --git a/src/App.css b/src/App.css[m
[1mindex 8698386..92c9962 100644[m
[1m--- a/src/App.css[m
[1m+++ b/src/App.css[m
[36m@@ -8,6 +8,12 @@[m [mhtml {[m
   overflow-x: hidden;[m
 }[m
 [m
[32m+[m[32mbutton:disabled,[m
[32m+[m[32mbutton[disabled]{[m
[32m+[m[32m  cursor: not-allowed;[m
[32m+[m[32m  background: #6ba9e4;[m
[32m+[m[32m}[m
[32m+[m
 .App {[m
   text-align: center;[m
   background: black;[m
[1mdiff --git a/src/components/Form.js b/src/components/Form.js[m
[1mindex 254753c..db2eb54 100644[m
[1m--- a/src/components/Form.js[m
[1m+++ b/src/components/Form.js[m
[36m@@ -16,21 +16,18 @@[m [mimport { useContractFunction, useEtherBalance, useEthers, useTokenBalance, useTo[m
 [m
 [m
 function Form() {[m
[31m-  const [confirmationButton, setConfirmationButton] = useState(false);[m
   const { setIsOpen, setWhichModalToOpen, setIsFirstToken } = useContext(ModalContext);[m
   const {firstToken, secondToken} = useContext(CoinContext);[m
   const { account } = useEthers()[m
   const [firstTokenValue, setFirstTokenValue] = useState(0)[m
[32m+[m[32m  const firstTokenBalance = useTokenBalance(firstToken.address, account)[m
[32m+[m[32m  const etherBalance = useEtherBalance(account)[m
 [m
   const predaDexAddress = "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90"[m
[31m-  let erc20Interface[m
[31m-  let fromTokenContract[m
[31m-  [m
[31m-  erc20Interface = new utils.Interface(erc20Abi)[m
[31m-  fromTokenContract = new Contract(firstToken.address, erc20Interface)[m
[31m-[m
[31m-  const predaDexInterface = new utils.Interface(predaDexAbi)[m
[31m-  const predaDexContract = new Contract(predaDexAddress, predaDexInterface)[m
[32m+[m[32m  let erc20Interface = new utils.Interface(erc20Abi)[m
[32m+[m[32m  let fromTokenContract = new Contract(firstToken.address, erc20Interface)[m
[32m+[m[32m  let predaDexInterface = new utils.Interface(predaDexAbi)[m
[32m+[m[32m  let predaDexContract = new Contract(predaDexAddress, predaDexInterface)[m
 [m
   useEffect(() => {[m
     erc20Interface = new utils.Interface(erc20Abi)[m
[36m@@ -38,9 +35,8 @@[m [mfunction Form() {[m
   },[firstToken.address]);[m
   [m
   [m
[31m-  const firstTokenBalance = useTokenBalance(firstToken.address, account)[m
[31m-  const etherBalance = useEtherBalance(account)[m
[31m-  const myBalance = useEtherBalance(account)[m
[32m+[m
[32m+[m
   [m
   const openModalForFirstToken = () => {[m
     setWhichModalToOpen("SelectToken")[m
[36m@@ -75,6 +71,7 @@[m [mfunction Form() {[m
 [m
   return ([m
   <div>[m
[32m+[m[32m    <form  onSubmit={confirmDeposit}>[m
     {/*First  window*/}[m
     <div className="form-wrapper-outside">[m
       <div className="form-wrapper">[m
[36m@@ -202,11 +199,11 @@[m [mfunction Form() {[m
     Allow PredaDEX to use your {firstToken == null ? "BTC":firstToken.shortcut}[m
   </button>[m
   :[m
[31m-  <button className="allow-confirmation-buttons confirmation-button" onClick={confirmDeposit}>[m
[32m+[m[32m  <button disabled={!secondToken} type="submit" className="allow-confirmation-buttons confirmation-button" onClick={confirmDeposit}>[m
     CONFIRM[m
   </button>}[m
 </div>[m
[31m-[m
[32m+[m[32m</form>[m
 </div>[m
 );[m
 }[m
